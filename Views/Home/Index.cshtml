@model IEnumerable<GammaWear.Models.Sock>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@using GammaWear.Helpers

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    @foreach (var sock in Model)
    {
        <div class="col-md-4">
            <div class="card mb-4 shadow-sm">
                <a href="@Url.Action("Details", "Sock", new { id = sock.Id })">
                    <img class="card-img-top" src="~/images/@sock.ImageFile" alt="@sock.Description">
                </a>
                
                <div class="card-body">
                    <p class="card-text">@TruncateDescription(sock.Description, 30)</p>

                    <p class="card-text">Price: @sock.Price.ToString("C")</p>
                   

                    <div class="d-flex justify-content-between align-items-center">
                        <div class="btn-group">
                            <a href="@Url.Action("Details", "Sock", new { id = sock.Id })" class="btn btn-sm btn-outline-secondary">View</a>
                           
                        </div>

                        
                        <small class="text-muted">In Stock: @sock.Quantity</small>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@functions {
    public static string TruncateDescription(string description, int wordCount)
    {
        if (string.IsNullOrEmpty(description))
        {
            return description;
        }

        var words = description.Split(' ');
        if (words.Length <= wordCount)
        {
            return description;
        }

        return string.Join(" ", words.Take(wordCount)) + "...";
    }
}